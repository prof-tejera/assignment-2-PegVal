{"ast":null,"code":"//const Tabata = () => null;\nimport{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Tabata=_ref=>{let{duration,init,rehearsal,pause,remaining}=_ref;// valeur à faire passer dans le componet\nconst valInitial=init;const valFinal=duration;const valRepeat=rehearsal;const valPause=pause;const[total,setTotal]=useState(remaining+1);const[repeat,setRepeat]=useState(valRepeat);const[seconds,setSeconds]=useState(valInitial);const[isActive,setIsActive]=useState(false);// btn play/pause\nconst[isFinish,setIsFinish]=useState(false);// quand on arrive à la fin\nconst[count,setCount]=useState(valPause);const[pauseActif,setpauseActif]=useState(false);function toggle(){setIsActive(!isActive);// intervertir la valeur pour le btn Play/Pause\n}function reset(){setSeconds(valInitial);setIsActive(false);setIsFinish(false);// quand tout est terminé (pause et repetition inclus)\nsetRepeat(valRepeat);// nombre de répétition: retour à la la valeur initiale\nsetCount(valPause);// pause: retour à la valeur initiale\nsetpauseActif(false);// la pause est inactive\nsetTotal(remaining+1);console.log(\"reset\");}function forward(){setSeconds(valFinal);// timer: retour à la la valeur initiale\nsetIsFinish(true);// c'est terminé\nsetRepeat(0);// pour le repeat: au reset réinitialiser les valeurs\nsetCount(0);// pour le timer de la pause: au reset réinitialiser les valeurs\nsetpauseActif(false);// la pause est inactive\nsetTotal(0);console.log(\"Forward end\");}useEffect(()=>{if(repeat>0){let interval=setInterval(()=>{// ---- pause  pauseActif = true;\nif(count>0&&pauseActif!==false){setCount(count-1);setTotal(total-1);console.log(\"count\",count);if(count===1){console.log(\"Redémarrer les compteurs\");// ----- n° de round -----\nsetSeconds(seconds=>valInitial);// on recommence le timer\nsetCount(count=>valPause);// on recommence le compteur de la pause\nsetpauseActif(false);// on change le param de pause pour pouvoir recommencer\nsetRepeat(repeat=>repeat-1);// decrement n° of repeat\n}}else if(isActive&&!pauseActif&&count!==valPause){setpauseActif(true);clearInterval(interval);console.log(\"PAUSE ---> Start\");}// ---- duration\nif(isActive&&seconds!==valFinal){setSeconds(seconds-1);console.log(\"seconds\",seconds);setTotal(total-1);if(seconds===valFinal+1){console.log(\"round terminé\");setpauseActif(true);// coundown de la pause\n}}else if(!isActive&&pauseActif&&seconds!==valInitial){setpauseActif(false);clearInterval(interval);console.log(\"TIMER ---> Pause\");}},1000);return()=>clearInterval(interval);}else{console.log(\"Tout est TERMINÉ!\");setIsFinish(true);// quand on arrive à la fin, les btn doivent disparaitre\nsetRepeat(0);setSeconds(0);setCount(0);setTotal(0);}},[isActive,seconds,repeat,valFinal,valInitial,count,pauseActif,valPause,total]);return/*#__PURE__*/_jsxs(\"div\",{className:\"counter-content\",id:\"#tabata\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"TABATA\"}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"You have requested a counter from (\",valInitial,\" to \",valFinal,\") with a pause of \",valPause,\" seconds, \",valRepeat,\" times\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"counterBoxContent\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"counterBox\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"timerTitle\",children:\"Timer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"timerDisplaySecond\",children:[seconds,\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"timerSecond\",children:\"seconds\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"infoBoxContent\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"titleInfo\",children:\"Repeat\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"numInfo\",children:[repeat,\"/\",valRepeat]}),/*#__PURE__*/_jsx(\"p\",{className:\"numInfoSec\",children:\"Times\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"titleInfo\",children:\"Pause\"}),/*#__PURE__*/_jsx(\"p\",{className:\"numInfo\",children:count}),/*#__PURE__*/_jsx(\"p\",{className:\"numInfoSec\",children:\"Seconds\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"titleInfo\",children:\"Remaining\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"numInfo\",children:[total,\"/\",remaining+1]}),/*#__PURE__*/_jsx(\"p\",{className:\"numInfoSec\",children:\"Seconds\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttonContent\",children:[!isFinish&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"button button-\".concat(isActive?\"active\":\"inactive\"),onClick:toggle,children:isActive?\"Pause\":\"Start\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:forward,children:\"Forward\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:reset,children:\"Reset\"})]})]});};export default Tabata;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tabata","_ref","duration","init","rehearsal","pause","remaining","valInitial","valFinal","valRepeat","valPause","total","setTotal","repeat","setRepeat","seconds","setSeconds","isActive","setIsActive","isFinish","setIsFinish","count","setCount","pauseActif","setpauseActif","toggle","reset","console","log","forward","interval","setInterval","clearInterval","className","id","children","concat","onClick"],"sources":["/Users/peggy/Documents/GitHub/assignment-2-PegVal-new/timer/src/components/timers/Tabata.js"],"sourcesContent":["//const Tabata = () => null;\nimport { useState, useEffect } from \"react\";\n\nconst Tabata = ({ duration, init, rehearsal, pause, remaining }) => {\n  // valeur à faire passer dans le componet\n  const valInitial = init;\n  const valFinal = duration;\n  const valRepeat = rehearsal;\n  const valPause = pause;\n\n  const [total, setTotal] = useState(remaining + 1);\n\n  const [repeat, setRepeat] = useState(valRepeat);\n  const [seconds, setSeconds] = useState(valInitial);\n  const [isActive, setIsActive] = useState(false); // btn play/pause\n  const [isFinish, setIsFinish] = useState(false); // quand on arrive à la fin\n\n  const [count, setCount] = useState(valPause);\n  const [pauseActif, setpauseActif] = useState(false);\n\n  function toggle() {\n    setIsActive(!isActive); // intervertir la valeur pour le btn Play/Pause\n  }\n\n  function reset() {\n    setSeconds(valInitial);\n    setIsActive(false);\n    setIsFinish(false); // quand tout est terminé (pause et repetition inclus)\n    setRepeat(valRepeat); // nombre de répétition: retour à la la valeur initiale\n    setCount(valPause); // pause: retour à la valeur initiale\n    setpauseActif(false); // la pause est inactive\n    setTotal(remaining + 1);\n    console.log(\"reset\");\n  }\n\n  function forward() {\n    setSeconds(valFinal); // timer: retour à la la valeur initiale\n    setIsFinish(true); // c'est terminé\n    setRepeat(0); // pour le repeat: au reset réinitialiser les valeurs\n    setCount(0); // pour le timer de la pause: au reset réinitialiser les valeurs\n    setpauseActif(false); // la pause est inactive\n    setTotal(0);\n    console.log(\"Forward end\");\n  }\n\n  useEffect(() => {\n    if (repeat > 0) {\n      let interval = setInterval(() => {\n        // ---- pause  pauseActif = true;\n        if (count > 0 && pauseActif !== false) {\n          setCount(count - 1);\n          setTotal(total - 1);\n          console.log(\"count\", count);\n          if (count === 1) {\n            console.log(\"Redémarrer les compteurs\");\n            // ----- n° de round -----\n            setSeconds((seconds) => valInitial); // on recommence le timer\n            setCount((count) => valPause); // on recommence le compteur de la pause\n            setpauseActif(false); // on change le param de pause pour pouvoir recommencer\n            setRepeat((repeat) => repeat - 1); // decrement n° of repeat\n          }\n        } else if (isActive && !pauseActif && count !== valPause) {\n          setpauseActif(true);\n          clearInterval(interval);\n          console.log(\"PAUSE ---> Start\");\n        }\n\n        // ---- duration\n        if (isActive && seconds !== valFinal) {\n          setSeconds(seconds - 1);\n          console.log(\"seconds\", seconds);\n          setTotal(total - 1);\n\n          if (seconds === valFinal + 1) {\n            console.log(\"round terminé\");\n            setpauseActif(true); // coundown de la pause\n          }\n        } else if (!isActive && pauseActif && seconds !== valInitial) {\n          setpauseActif(false);\n          clearInterval(interval);\n          console.log(\"TIMER ---> Pause\");\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    } else {\n      console.log(\"Tout est TERMINÉ!\");\n      setIsFinish(true); // quand on arrive à la fin, les btn doivent disparaitre\n      setRepeat(0);\n      setSeconds(0);\n      setCount(0);\n      setTotal(0);\n    }\n  }, [\n    isActive,\n    seconds,\n    repeat,\n    valFinal,\n    valInitial,\n    count,\n    pauseActif,\n    valPause,\n    total,\n  ]);\n\n  return (\n    <div className=\"counter-content\" id=\"#tabata\">\n      <h2>TABATA</h2>\n      <h4>\n        You have requested a counter from ({valInitial} to {valFinal}) with a\n        pause of {valPause} seconds, {valRepeat} times\n      </h4>\n\n      <div className=\"counterBoxContent\">\n        <div className=\"counterBox\">\n          <div className=\"timerTitle\">Timer</div>\n          <div className=\"timerDisplaySecond\">{seconds} </div>\n          <div className=\"timerSecond\">seconds</div>\n        </div>\n        <div className=\"infoBoxContent\">\n          <div className=\"info\">\n            <p className=\"titleInfo\">Repeat</p>\n            <p className=\"numInfo\">\n              {repeat}/{valRepeat}\n            </p>\n            <p className=\"numInfoSec\">Times</p>\n          </div>\n          <div className=\"info\">\n            <p className=\"titleInfo\">Pause</p>\n            <p className=\"numInfo\">{count}</p>\n            <p className=\"numInfoSec\">Seconds</p>\n          </div>\n          <div className=\"info\">\n            <p className=\"titleInfo\">Remaining</p>\n            <p className=\"numInfo\">\n              {total}/{remaining + 1}\n            </p>\n            <p className=\"numInfoSec\">Seconds</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"buttonContent\">\n        {!isFinish && (\n          <>\n            <button\n              className={`button button-${isActive ? \"active\" : \"inactive\"}`}\n              onClick={toggle}\n            >\n              {isActive ? \"Pause\" : \"Start\"}\n            </button>\n\n            <button className=\"button\" onClick={forward}>\n              Forward\n            </button>\n          </>\n        )}\n        <button className=\"button\" onClick={reset}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}